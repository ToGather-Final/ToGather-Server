plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
	set('springBootVersion', "3.5.6")
	set('springCloudVersion', "2025.0.0")
	set('jjwtVersion', "0.11.5")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
}

tasks.named('test') {
	useJUnitPlatform()
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		implementation "org.springframework.boot:spring-boot-starter-validation"
		implementation "org.springframework.boot:spring-boot-starter-security"
		implementation "org.springframework.boot:spring-boot-starter-actuator"

		implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
		runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
		runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

		compileOnly "org.projectlombok:lombok"
		annotationProcessor "org.projectlombok:lombok"

		testImplementation "org.springframework.boot:spring-boot-starter-test"
		testImplementation "org.springframework.security:spring-security-test"
		testRuntimeOnly "org.junit.platform:junit-platform-launcher"
	}

	tasks.withType(Test) {
		useJUnitPlatform()
		testLogging {
			events "passed", "skipped", "failed"
			exceptionFormat "full"
		}
	}
}

project(":api-gateway") {
	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation project(':module-common')

		// Gateway (WebFlux)
		implementation "org.springframework.cloud:spring-cloud-starter-gateway-server-webflux"
		implementation "org.springframework.cloud:spring-cloud-starter-loadbalancer"
		implementation("org.springframework.boot:spring-boot-starter-webflux") {
			exclude group: "org.springframework.boot", module: "spring-boot-starter-web"
		}
		implementation "org.springframework.boot:spring-boot-starter-data-redis-reactive"

		// Kubernetes 클라이언트
		implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client'

		// JWT
		implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
		runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
		runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"


		// Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}
}

project(":module-common") {
	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	}
}

project(":user-service") {
	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation project(':module-common')
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		runtimeOnly 'com.mysql:mysql-connector-j'
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

		testImplementation 'org.testcontainers:testcontainers'
		testImplementation 'org.testcontainers:mysql'
		testImplementation 'org.testcontainers:junit-jupiter'
	}
}

project(":vote-service") {
	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation project(':module-common')
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		runtimeOnly 'com.mysql:mysql-connector-j'

		// Redis (Jedis)
		implementation('org.springframework.boot:spring-boot-starter-data-redis') {
			exclude group: 'io.lettuce', module: 'lettuce-core'
		}
		implementation 'redis.clients:jedis'

	}
}

project(":pay-service") {
	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation project(':module-common')
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		runtimeOnly 'com.mysql:mysql-connector-j'
		testImplementation 'com.h2database:h2'
	}
}

project(":trading-service") {
	apply plugin: 'org.springframework.boot'

	dependencies {
		implementation project(':module-common')
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-data-redis'
		implementation 'org.springframework.boot:spring-boot-starter-websocket'
		runtimeOnly 'com.mysql:mysql-connector-j'
		testImplementation 'com.h2database:h2'
		
		// OpenFeign 의존성 추가
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	}
}
