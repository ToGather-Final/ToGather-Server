apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: togather-ingress
  namespace: togather
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/load-balancer-name: togather-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'

    # ACM (서울 리전) 인증서 ARN
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:340623336075:certificate/66b08f32-5582-4357-b5b7-c2a796b4d49d

    # SSL 리디렉션
    alb.ingress.kubernetes.io/actions.ssl-redirect: >
      {"Type":"redirect","RedirectConfig":{"Protocol":"HTTPS","Port":"443","StatusCode":"HTTP_301"}}

    # 새 보안그룹
    alb.ingress.kubernetes.io/security-groups: sg-0b3aee7dddb4c0aea

    # Inbound CIDR (CloudFront Origin Access)
    alb.ingress.kubernetes.io/inbound-cidrs: 13.35.0.0/16,13.249.0.0/16,18.64.0.0/16,18.160.0.0/16,18.172.0.0/16,18.232.0.0/16,18.244.0.0/16,43.250.248.0/24,43.250.249.0/24,43.250.250.0/24,43.250.251.0/24,52.82.128.0/19,52.222.128.0/17,54.182.0.0/16,54.230.0.0/16,204.246.164.0/22,204.246.168.0/22,204.246.174.0/23,204.246.176.0/20
    
    # 🚀 ALB 타임아웃 설정 (Cold Start 방지)
    alb.ingress.kubernetes.io/target-group-attributes: |
      deregistration_delay.timeout_seconds=30,
      stickiness.enabled=false,
      load_balancing.algorithm.type=round_robin,
      health_check.interval_seconds=10,
      health_check.timeout_seconds=5,
      health_check.healthy_threshold_count=2,
      health_check.unhealthy_threshold_count=3,
      health_check.protocol=HTTP,
      health_check.path=/,
      health_check.port=traffic-port,
      health_check.matcher.http_code=200

spec:
  ingressClassName: alb
  rules:
    - host: xn--o79aq2k062a.store
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 8000
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextjs-client
                port:
                  number: 3000
    - host: www.xn--o79aq2k062a.store
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 8000
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nextjs-client
                port:
                  number: 3000


#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: togather-ingress
#  namespace: togather
#  annotations:
#
#    # ✅ ALB 기본 설정
#    alb.ingress.kubernetes.io/scheme: internet-facing
#    alb.ingress.kubernetes.io/target-type: ip
#    alb.ingress.kubernetes.io/load-balancer-name: togather-alb
#
#    # ✅ SSL/TLS 설정
##    alb.ingress.kubernetes.io/ssl-redirect: '443'
##    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
##    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:340623336075:certificate/66b08f32-5582-4357-b5b7-c2a796b4d49d
#
#    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
#    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:340623336075:certificate/66b08f32-5582-4357-b5b7-c2a796b4d49d
#
#    # ✅ HTTP → HTTPS 리다이렉션 액션 정의
#    alb.ingress.kubernetes.io/actions.ssl-redirect: >
#      {"Type":"redirect","RedirectConfig":{"Protocol":"HTTPS","Port":"443","StatusCode":"HTTP_301"}}
#
#    # ✅ Health Check 설정 (SSR 대응)
#    alb.ingress.kubernetes.io/healthcheck-path: /
#    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '20'
#    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
#
#    # 🚀 성능 최적화 (SSR 렌더링 대응)
#    alb.ingress.kubernetes.io/load-balancer-attributes: >
#      idle_timeout.timeout_seconds=300,
#      routing.http.drop_invalid_header_fields.enabled=true,
#      routing.http2.enabled=true
#
#    # 🚀 타임아웃 설정 (SSR 렌더링 대응)
#    alb.ingress.kubernetes.io/backend-protocol: HTTP
#    alb.ingress.kubernetes.io/target-group-attributes: >
#      deregistration_delay.timeout_seconds=30,
#      stickiness.enabled=true,
#      stickiness.lb_cookie.duration_seconds=86400,
#      load_balancing.cross_zone.enabled=true,
#      target_health_check.timeout_seconds=30,
#      target_health_check.interval_seconds=10,
#      target_health_check.healthy_threshold_count=2,
#      target_health_check.unhealthy_threshold_count=3
#
#    # 🚀 연결 최적화 (SSR 렌더링 대응)
#    alb.ingress.kubernetes.io/connection-idle-timeout: "120"  # 🚀 타임아웃 증가
#    alb.ingress.kubernetes.io/success-codes: "200,301,302"
#
#spec:
#  ingressClassName: alb
#  rules:
#    # ===============================================
#    # 🌐 메인 도메인 (xn--o79aq2k062a.store)
#    # ===============================================
#    - host: xn--o79aq2k062a.store
#      http:
#        paths:
#          - path: /api
#            pathType: Prefix
#            backend:
#              service:
#                name: api-gateway
#                port:
#                  number: 8000
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: nextjs-client
#                port:
#                  number: 3000
#
#    # ===============================================
#    # 🌐 서브 도메인 (www.xn--o79aq2k062a.store)
#    # ===============================================
#    - host: www.xn--o79aq2k062a.store
#      http:
#        paths:
#          - path: /api
#            pathType: Prefix
#            backend:
#              service:
#                name: api-gateway
#                port:
#                  number: 8000
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: nextjs-client
#                port:
#                  number: 3000
#
#    # ===============================================
#    # 🔒 HTTP 요청 → HTTPS로 리다이렉션 (제거)
#    # ===============================================
#    # HTTP 리다이렉션은 ALB annotation으로 처리됨
