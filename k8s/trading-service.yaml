apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-service
  namespace: togather
  labels:
    app: trading-service
spec:
  replicas: 2  # 🚀 단일 파드 운영 (KIS API 중복 방지)
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2        # 단일 파드 운영
      maxUnavailable: 0   # 무중단 배포
  selector:
    matchLabels:
      app: trading-service
  template:
    metadata:
      labels:
        app: trading-service
    spec:
      # 단일 파드 운영으로 Anti-Affinity 불필요
      containers:
      - name: trading-service
        image: 340623336075.dkr.ecr.ap-northeast-2.amazonaws.com/togather/trading-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "main"
        - name: LOGGING_LEVEL_ROOT
          value: "WARN"
        - name: LOGGING_LEVEL_COM_EXAMPLE
          value: "INFO"
        # 서비스 간 통신 URL 환경변수
        - name: USER_SERVICE_URL
          value: "http://user-service.togather.svc.cluster.local:8080"
        - name: VOTE_SERVICE_URL
          value: "http://vote-service.togather.svc.cluster.local:8080"
        - name: PAY_SERVICE_URL
          value: "http://pay-service.togather.svc.cluster.local:8080"
        envFrom:
          - configMapRef:
              name: togather-config
          - configMapRef:
              name: togather-db-config
          - secretRef:
              name: togather-secrets
        resources:
          requests:
            memory: "2Gi"    # 🚀 단일 파드 대용량 메모리 할당
            cpu: "1000m"     # 🚀 단일 파드 고성능 CPU 할당
          limits:
            memory: "4Gi"    # 🚀 단일 파드 최대 메모리 확장
            cpu: "2000m"      # 🚀 단일 파드 최대 CPU 확장
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: trading-service
  namespace: togather
spec:
  selector:
    app: trading-service
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
