server:
  port: 8000

jwt:
  secret: ${JWT_SECRET_KEY}

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true

spring:
  application:
    name: api-gateway
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  cloud:
    gateway:
      routes:
        - id: auth-service-route
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=1
        - id: user-service-route
          uri: lb://user-service
          predicates:
            - Path=/api/user/**
          filters:
            - StripPrefix=1
        - id: vote-service-route
          uri: lb://vote-service
          predicates:
            - Path=/api/vote/**
          filters:
            - StripPrefix=1
        - id: trading-service-route
          uri: lb://trading-service
          predicates:
            - Path=/api/trading/**
          filters:
            - StripPrefix=1
        - id: pay-service-route
          uri: lb://pay-service
          predicates:
            - Path=/api/pay/**
          filters:
            - StripPrefix=1
    kubernetes:
      discovery:
        enabled: true
        all-namespaces: false
      reload:
        enabled: false
      config:
        enabled: false
    loadbalancer:
      enabled: true
      health-check:
        initial-delay: 0
        interval: 1s
    compatibility-verifier:
      enabled: false


  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
      - org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration
      - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration

  datasource:
    url: ""
    username: ""
    password: ""
    driver-class-name: ""

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.kubernetes: INFO
    org.springframework.cloud.loadbalancer: INFO
    org.springframework.web.reactive: INFO
    reactor.netty: INFO
    com.example.api_gateway: INFO

---

spring:
  config:
    activate:
      on-profile: "dev"
  data:
    redis:
      host: ${app.redis.host:localhost}
      port: ${app.redis.port:6379}
      password: ${app.redis.password:togather1234}

jwt:
  secret: ${app.jwt.secret:TogatherSecretkey}
server:
  port: 8000

---

spring:
  config:
    activate:
      on-profile: "main"
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      timeout: 5000ms
      connect-timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: 5000ms
        shutdown-timeout: 100ms

jwt:
  secret: ${JWT_SECRET_KEY:TogatherSecretkey}
server:
  port: 8000