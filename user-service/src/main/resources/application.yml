# ===============================================
# ✅ 공통 설정 (모든 프로파일에 적용)
# ===============================================
spring:
  application:
    name: user-service
  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  datasource:
    # 운영 환경에서는 환경 변수를 통해 주입받습니다.
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: 5672
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:}
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
    endpoint:
      health:
        show-details: always

# JWT 설정 키를 'secret-key'로 통일합니다.
jwt:
  secret-key: ${JWT_SECRET_KEY}

---
# ===============================================
# 🌳 dev 프로파일 (개발 환경)
# ===============================================
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    url: ${app.database.url:jdbc:mysql://localhost:3306/togather_db}
    username: ${app.database.username:admin}
    password: ${app.database.password:togather1234}
  jpa:
    hibernate:
      ddl-auto: update # 개발 시에는 스키마 자동 변경
    show-sql: true # SQL 쿼리 로그 활성화
  data:
    redis:
      host: ${app.redis.host:localhost}
      port: ${app.redis.port:6379}
      password: ${app.redis.password:togather1234}
  rabbitmq:
    host: ${app.rabbitmq.host:localhost}
    port: ${app.rabbitmq.port:5672}
    username: ${app.rabbitmq.username:guest}
    password: ${app.rabbitmq.password:togather1234}
  logging:
    level:
      com.example.user_service: DEBUG

jwt:
  secret: ${app.jwt.secret:TogatherSecretkey}
  access-exp-seconds: ${app.jwt.access-exp-seconds:1800}
  refresh-exp-days: ${app.jwt.refresh-exp-days:7}

server:
  port: 8082 # main과 다른 포트 사용

---
# ===============================================
# 🚀 main 프로파일 (운영 환경)
# ===============================================
spring:
  config:
    activate:
      on-profile: "main"
  jpa:
    hibernate:
      ddl-auto: update # ❗ 운영에서는 스키마 변경 없이 검증만 수행
    show-sql: false # 성능을 위해 SQL 로그 비활성화
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
  logging:
    level:
      com.example.user_service: INFO # 운영에서는 INFO 레벨 이상만 기록

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET_KEY:TogatherSecretkey}
  access-exp-seconds: ${app.jwt.access-exp-seconds:1800}
  refresh-exp-days: ${app.jwt.refresh-exp-days:7}