# ===============================================
# ✅ 공통 설정 (모든 프로파일에 적용)
# ===============================================
spring:
  application:
    name: trading-service
  profiles:
    include: common  # module-common의 설정 포함
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  # Redis와 RabbitMQ 설정은 module-common에서 상속받음


# JWT 설정 키를 'secret-key'로 통일합니다.
jwt:
  secret-key: ${JWT_SECRET_KEY}

---
# ===============================================
# 🌳 dev 프로파일 (개발 환경)
# ===============================================
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${app.database.url:jdbc:mysql://localhost:3306/togather_db}
    username: ${app.database.username:admin}
    password: ${app.database.password:togather1234}
  jpa:
    hibernate:
      ddl-auto: update # 개발 시에는 스키마 자동 변경
    show-sql: true # SQL 로그 활성화
  # Redis와 RabbitMQ 설정은 module-common에서 상속받음
  logging:
    level:
      com.example.trading_service: DEBUG

jwt:
  secret: ${JWT_SECRET_KEY:TogatherSecretkey}
  access-exp-seconds: ${JWT_ACCESS_EXP:1800}
  refresh-exp-days: ${JWT_REFRESH_EXP:7}

kis:
  base-url: ${app.kis.base-url:https://openapi.koreainvestment.com:9443}
  appkey: ${app.kis.appkey:PSl58sGebbz74LDEINMKH0QXCbX0tnuxy55B}
  appsecret: ${app.kis.appsecret:OLkpy/YoF7d/KajEe10twHWOCm8yvNgiKJRdWyPuo5prz2Munm8Fx2gITWmUAsw1CRjukfuZxuiYKuIb09nC6oNC2F2WiNQhPqoW7sxQLa4fzXqdOBMwleSkldkOQ7c4ofAptRGRLpZZJx5HTUtM2sfiD+Hc6Om+WkOsPYD/GEHL9p8sQIg=}

app:
  redis:
    host: redis-10044.c8.us-east-1-4.ec2.redns.redis-cloud.com
    port: 10044
    username: default
    password: ONNcFAZsKeBL4L736zqWTvsil4P9lLfu

server:
  port: 8081

---
# ===============================================
# 🚀 main 프로파일 (운영 환경)
# ===============================================
spring:
  config:
    activate:
      on-profile: "main"
  jpa:
    hibernate:
      ddl-auto: update # ❗ 운영에서는 스키마 변경 없이 검증만 수행
    show-sql: false # 성능을 위해 SQL 로그 비활성화
  # Redis와 RabbitMQ 설정은 module-common에서 상속받음
  logging:
    level:
      com.example.user_service: INFO # 운영에서는 INFO 레벨 이상만 기록

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET_KEY:TogatherSecretkey}
  access-exp-seconds: ${JWT_ACCESS_EXP:1800}
  refresh-exp-days: ${JWT_REFRESH_EXP:7}