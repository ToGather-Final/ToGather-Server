# ===============================================
# ‚úÖ Í≥µÌÜµ ÏÑ§Ï†ï (Î™®Îì† ÌîÑÎ°úÌååÏùºÏóê Ï†ÅÏö©)
# ===============================================
app:
  database:
    url: ${DB_URL:jdbc:mysql://localhost:3306/togather_db}
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:}
  redis:
    host: ${SPRING_DATA_REDIS_HOST:localhost}
    port: ${SPRING_DATA_REDIS_PORT:6379}
    password: ${SPRING_DATA_REDIS_PASSWORD:}
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
  jwt:
    secret: ${JWT_SECRET_KEY:}
    issuer: ${JWT_ISSUER:togather}
    access-exp-seconds: ${JWT_ACCESS_EXP:1800}
    refresh-exp-days: ${JWT_REFRESH_EXP:7}
  services:
    user-service:
      url: ${USER_SERVICE_URL:http://localhost:8082}

spring:
  config:
    import:
      - optional:file:application-dev.yml
  application:
    name: trading-service
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    open-in-view: false
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PASSWORD:}
      timeout: 2000ms
      connect-timeout: 2000ms
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
    connection-timeout: 15000
    virtual-host: /
  management:
    endpoints:
      web:
        exposure:
          include: health,info,metrics
    endpoint:
      health:
        show-details: always

# JWT ÏÑ§Ï†ï ÌÇ§Î•º 'secret-key'Î°ú ÌÜµÏùºÌï©ÎãàÎã§.
jwt:
  secret-key: ${JWT_SECRET_KEY}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
  override-with-generic-response: false


---
# ===============================================
# üå≥ dev ÌîÑÎ°úÌååÏùº (Í∞úÎ∞ú ÌôòÍ≤Ω)
# ===============================================
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${app.database.url:jdbc:mysql://localhost:3306/togather_db}
    username: ${app.database.username:admin}
    password: ${app.database.password:}
  jpa:
    hibernate:
      ddl-auto: update # Í∞úÎ∞ú ÏãúÏóêÎäî Ïä§ÌÇ§Îßà ÏûêÎèô Î≥ÄÍ≤Ω
    show-sql: true # SQL Î°úÍ∑∏ ÌôúÏÑ±Ìôî
  logging:
    level:
      com.example.trading_service: DEBUG

jwt:
  secret: ${JWT_SECRET_KEY:TogatherSecretkey}
  access-exp-seconds: ${JWT_ACCESS_EXP:1800}
  refresh-exp-days: ${JWT_REFRESH_EXP:7}

kis:
  base-url: ${KIS_BASE_URL:https://openapi.koreainvestment.com:9443}
  appkey: ${KIS_APPKEY:}
  appsecret: ${KIS_APPSECRET:}

server:
  port: 8081

pay-service:
  url: ${PAY_SERVICE_URL:http://localhost:8083}
user-service:
  url: ${USER_SERVICE_URL:http://localhost:8082}

---
# ===============================================
# üöÄ main ÌîÑÎ°úÌååÏùº (Ïö¥ÏòÅ ÌôòÍ≤Ω)
# ===============================================
spring:
  config:
    activate:
      on-profile: "main"
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  logging:
    level:
      com.example.trading_service: INFO

server:
  port: 8080

jwt:
  secret: ${JWT_SECRET_KEY:TogatherSecretkey}
  access-exp-seconds: ${JWT_ACCESS_EXP:1800}
  refresh-exp-days: ${JWT_REFRESH_EXP:7}

kis:
  base-url: ${KIS_BASE_URL:https://openapi.koreainvestment.com:9443}
  appkey: ${KIS_APPKEY:}
  appsecret: ${KIS_APPSECRET:}

pay-service:
  url: ${PAY_SERVICE_URL:http://pay-service:8080}